// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewInstance extends ethereum.Event {
  get params(): NewInstance__Params {
    return new NewInstance__Params(this);
  }
}

export class NewInstance__Params {
  _event: NewInstance;

  constructor(event: NewInstance) {
    this._event = event;
  }

  get instance(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ShardedWalletFactory extends ethereum.SmartContract {
  static bind(address: Address): ShardedWalletFactory {
    return new ShardedWalletFactory("ShardedWalletFactory", address);
  }

  mintWallet(
    governance_: Address,
    owner_: Address,
    name_: string,
    symbol_: string
  ): Address {
    let result = super.call(
      "mintWallet",
      "mintWallet(address,address,string,string):(address)",
      [
        ethereum.Value.fromAddress(governance_),
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromString(name_),
        ethereum.Value.fromString(symbol_)
      ]
    );

    return result[0].toAddress();
  }

  try_mintWallet(
    governance_: Address,
    owner_: Address,
    name_: string,
    symbol_: string
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mintWallet",
      "mintWallet(address,address,string,string):(address)",
      [
        ethereum.Value.fromAddress(governance_),
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromString(name_),
        ethereum.Value.fromString(symbol_)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class MintWalletCall extends ethereum.Call {
  get inputs(): MintWalletCall__Inputs {
    return new MintWalletCall__Inputs(this);
  }

  get outputs(): MintWalletCall__Outputs {
    return new MintWalletCall__Outputs(this);
  }
}

export class MintWalletCall__Inputs {
  _call: MintWalletCall;

  constructor(call: MintWalletCall) {
    this._call = call;
  }

  get governance_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get name_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class MintWalletCall__Outputs {
  _call: MintWalletCall;

  constructor(call: MintWalletCall) {
    this._call = call;
  }

  get instance(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
